<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="NoticeMapper">

	<resultMap id="notice" type="project.spring.hohotest.model.Notice">
		<result property="id" column="id" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="hit" column="hit" />
	</resultMap>
	
	<!-- 게시글 정보 저장하기 -->
	<insert id="insertNotice" parameterType="project.spring.hohotest.model.Notice"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO bbs_document (
			title, content, hit
		) VALUES (
			#{title}, #{content}, 0
		)
	</insert>
	
	<!-- 게시물 하나에 대한 정보를 조회한다. -->
	<select id="selectNotice" 
		parameterType="project.spring.hohotest.model.Notice" 
		resultMap="notice">
		SELECT id, title, content, hit
		FROM   notice
		WHERE  id=#{id}
	</select>
	
	<!-- 이전글 정보를 조회한다. -->
	<select id="selectPrevNotice" 
		parameterType="project.spring.hohotest.model.Notice" 
		resultMap="notice">
		SELECT id, title, content, hit
		FROM   notice
		WHERE  id &lt; #{id}
		ORDER  BY id DESC
		LIMIT  0, 1
	</select>
	
	<!-- 다음글 정보를 조회한다. -->
	<select id="selectNextNotice" 
		parameterType="project.spring.hohotest.model.Notice" 
		resultMap="notice">
		SELECT id, title, content, hit
		FROM   notice
		WHERE  id &gt; #{id}
		ORDER  BY id ASC
		LIMIT  0, 1
	</select>
	
	<!-- 조회수 1 증가 -->
	<update id="updateNoticeHit" parameterType="project.spring.hohotest.model.Notice">
		UPDATE notice SET hit=hit+1 WHERE AND id=#{id}
	</update>
	
	<!-- 게시물 목록을 조회한다. -->
	<select id="selectNoticeList" parameterType="project.spring.hohotest.model.Notice" 
		resultMap="notice">
		SELECT id, title, content, hit
		FROM   notice
		ORDER  BY id DESC
		LIMIT #{limitStart}, #{listCount}
	</select>
	
	<!-- 전체 게시물 수를 조회한다. -->
	<select id="selectNoticeCount"
		parameterType="project.spring.hohotest.model.Notice"
		resultType="int">
		SELECT COUNT(id) FROM notice
		<where>
			category=#{category}
			<if test="title != null or content != null">
				AND (
					<if test="title != null">
						title LIKE concat('%', #{title}, '%')
					</if>
					<if test="content != null">
						OR content LIKE concat('%', #{content}, '%')
					</if>
				)
			</if>
		</where>
	</select>
	
	<!-- 게시글 삭제 하기 -->
	<delete id="deleteNotice" parameterType="project.spring.hohotest.model.Notice">
		DELETE FROM notice WHERE id=#{id}
	</delete>
	
	<!-- 게시글 정보 수정하기 -->
	<update id="updateNotice" parameterType="project.spring.hohotest.model.Notice">
		UPDATE notice SET
			title=#{title},
			content=#{content}
		WHERE id=#{id}
	</update>
	
</mapper>